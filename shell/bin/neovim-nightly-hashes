#!/usr/bin/env bash
# shellcheck shell=bash
set -e

# Script to extract SHA256 hashes for Neovim nightly builds
# Usage: neovim-nightly-hashes [--format nix|hex]

SCRIPT_NAME=$(basename "$0")
FORMAT="nix"  # Default format

# Parse arguments
while [[ $# -gt 0 ]]; do
    case $1 in
        --format)
            FORMAT="$2"
            shift 2
            ;;
        --help|-h)
            echo "Usage: $SCRIPT_NAME [--format nix|hex]"
            echo ""
            echo "Extract SHA256 hashes for Neovim nightly builds from GitHub releases."
            echo ""
            echo "Options:"
            echo "  --format nix|hex    Output format (default: nix)"
            echo "                      nix: sha256-base64format (ready for Nix)"
            echo "                      hex: hexadecimal format (from GitHub)"
            echo "  --help, -h          Show this help message"
            echo ""
            echo "Examples:"
            echo "  $SCRIPT_NAME                    # Get Nix-formatted hashes"
            echo "  $SCRIPT_NAME --format hex       # Get hex hashes"
            exit 0
            ;;
        *)
            echo "Error: Unknown option $1"
            echo "Use --help for usage information"
            exit 1
            ;;
    esac
done

# Validate format
if [[ "$FORMAT" != "nix" && "$FORMAT" != "hex" ]]; then
    echo "Error: Format must be 'nix' or 'hex'"
    exit 1
fi

echo "üåô Fetching Neovim nightly release information..."

# Get nightly release info from GitHub API
RELEASE_INFO=$(curl -s "https://api.github.com/repos/neovim/neovim/releases/tags/nightly")

if [[ -z "$RELEASE_INFO" ]] || echo "$RELEASE_INFO" | grep -q '"message": "Not Found"'; then
    echo "Error: Could not fetch nightly release information"
    exit 1
fi

# Extract release details
COMMIT=$(echo "$RELEASE_INFO" | jq -r '.target_commitish // "unknown"')
TAG_NAME=$(echo "$RELEASE_INFO" | jq -r '.tag_name // "nightly"')
PUBLISHED_AT=$(echo "$RELEASE_INFO" | jq -r '.published_at // "unknown"')

echo "üìã Nightly build information:"
echo "   Tag: $TAG_NAME"
echo "   Commit: $COMMIT"
echo "   Published: $PUBLISHED_AT"
echo ""

# Define the assets we need
declare -A ASSETS=(
    ["nvim-macos-arm64.tar.gz"]="macOS ARM64"
    ["nvim-macos-x86_64.tar.gz"]="macOS x86_64"
    ["nvim-linux-arm64.tar.gz"]="Linux ARM64"
    ["nvim-linux-x86_64.tar.gz"]="Linux x86_64"
)

# Function to convert hex to base64
hex_to_base64() {
    local hex_hash="$1"
    echo "$hex_hash" | xxd -r -p | base64
}

echo "üîç Extracting SHA256 hashes..."

# Create temporary directory for downloads
TEMP_DIR=$(mktemp -d)
trap 'rm -rf "$TEMP_DIR"' EXIT

declare -A HASHES

for asset in "${!ASSETS[@]}"; do
    echo "   Processing ${ASSETS[$asset]} ($asset)..."
    
    # Download the asset to get its hash
    DOWNLOAD_URL="https://github.com/neovim/neovim/releases/download/nightly/$asset"
    TEMP_FILE="$TEMP_DIR/$asset"
    
    if curl -sL "$DOWNLOAD_URL" -o "$TEMP_FILE"; then
        # Calculate SHA256 hash
        if command -v sha256sum >/dev/null 2>&1; then
            HEX_HASH=$(sha256sum "$TEMP_FILE" | cut -d' ' -f1)
        elif command -v shasum >/dev/null 2>&1; then
            HEX_HASH=$(shasum -a 256 "$TEMP_FILE" | cut -d' ' -f1)
        else
            echo "Error: No SHA256 utility found (sha256sum or shasum)"
            exit 1
        fi
        
        HASHES["$asset"]="$HEX_HASH"
    else
        echo "   ‚ö†Ô∏è  Warning: Could not download $asset"
        HASHES["$asset"]="FAILED"
    fi
done

echo ""
echo "üìù SHA256 Hashes ($FORMAT format):"
echo ""

if [[ "$FORMAT" == "nix" ]]; then
    echo "# Nightly hashes - update these when you want a newer nightly"
    echo "# Current nightly: $(date +%Y-%m-%d) (commit $COMMIT)"
    echo "nightlyHashes = {"
    
    for asset in "${!ASSETS[@]}"; do
        if [[ "${HASHES[$asset]}" != "FAILED" ]]; then
            BASE64_HASH=$(hex_to_base64 "${HASHES[$asset]}")
            echo "  \"$asset\" = \"sha256-$BASE64_HASH\";"
        else
            echo "  \"$asset\" = \"sha256-FAILED_TO_DOWNLOAD\"; # Failed to download"
        fi
    done
    
    echo "};"
    echo ""
    echo "üí° Copy the above block to replace nightlyHashes in nix/shared/overlays/neovim.nix"
    
elif [[ "$FORMAT" == "hex" ]]; then
    echo "Hexadecimal format (from GitHub checksums):"
    echo ""
    
    for asset in "${!ASSETS[@]}"; do
        if [[ "${HASHES[$asset]}" != "FAILED" ]]; then
            echo "$asset: ${HASHES[$asset]}"
        else
            echo "$asset: FAILED_TO_DOWNLOAD"
        fi
    done
    
    echo ""
    echo "üí° Use 'echo \"HEX_HASH\" | xxd -r -p | base64' to convert to Nix format"
fi

echo ""
echo "‚úÖ Hash extraction complete!"